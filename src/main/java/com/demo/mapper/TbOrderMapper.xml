<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.mapper.TbOrderMapper" >
  <resultMap id="BaseResultMap" type="com.demo.pojo.TbOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="payid" property="payid" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="receive_num" property="receiveNum" jdbcType="VARCHAR" />
    <result column="receive_address" property="receiveAddress" jdbcType="VARCHAR" />
    <result column="get_address" property="getAddress" jdbcType="VARCHAR" />
    <result column="size" property="size" jdbcType="VARCHAR" />
    <result column="hurry" property="hurry" jdbcType="BIT" />
    <result column="descration" property="descration" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="enable" property="enable" jdbcType="BIT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="phone_num" property="phoneNum" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, payid, name, openid, receive_num, receive_address, get_address, size, hurry, 
    descration, create_time, update_time, enable, status
  </sql>
    <update id="updateStatusByOrderId"  parameterType="com.demo.pojo.UpdateStatusByOrderId">
  			UPDATE tb_order o,
 				tb_receive_order r
				SET o. STATUS = #{orderstatus},
					 r. STATUS = #{receivestatus},
					 o.update_time= #{updatetime},
					 r.update_time = #{updatetime}
				WHERE
					o.id = #{id}	
				AND r.order_id = #{id}
  </update>
  <select id="getTheUser" parameterType="Integer" resultType="com.demo.pojo.TbUser">
      SELECT
		tb_user.`name`,
		tb_user.phone_num as phoneNum
	FROM
		tb_receive_order
		INNER JOIN tb_user ON tb_receive_order.openid = tb_user.id
	WHERE
		tb_receive_order.order_id = #{orderId}
  </select>
  
  <select id="getSelfOrderList" parameterType="String" resultMap="BaseResultMap">
       select 
       		<include refid="Base_Column_List" />
       	from 
       		tb_order c
       	where 
       		c.openid=#{openid} and (c.status=1 or c.status=2) 
       	order by 
       		c.update_time DESC
  </select>
  <select id="getOrderList" resultMap="BaseResultMap">
       select 
       		<include refid="Base_Column_List" />
        from 
        	tb_order 
        where 
        	status =1 
        order by 
        	update_time DESC
  </select>
  <select id="getHistoryOrderList" parameterType="String" resultMap="BaseResultMap">
       select <include refid="Base_Column_List" /> from tb_order c where c.openid=#{openid} and (c.status=3 or c.status=4) order by c.update_time DESC
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.demo.pojo.TbOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.demo.pojo.TbOrderExample" >
    delete from tb_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.pojo.TbOrder" >
    insert into tb_order (id, payid, name, 
      openid, receive_num, receive_address, 
      get_address, size, hurry, 
      descration, create_time, update_time, 
      enable, status)
    values (#{id,jdbcType=INTEGER}, #{payid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{openid,jdbcType=VARCHAR}, #{receiveNum,jdbcType=VARCHAR}, #{receiveAddress,jdbcType=VARCHAR}, 
      #{getAddress,jdbcType=VARCHAR}, #{size,jdbcType=VARCHAR}, #{hurry,jdbcType=BIT}, 
      #{descration,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{enable,jdbcType=BIT}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.pojo.TbOrder" >
    insert into tb_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="payid != null" >
        payid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="receiveNum != null" >
        receive_num,
      </if>
      <if test="receiveAddress != null" >
        receive_address,
      </if>
      <if test="getAddress != null" >
        get_address,
      </if>
      <if test="size != null" >
        size,
      </if>
      <if test="hurry != null" >
        hurry,
      </if>
      <if test="descration != null" >
        descration,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="enable != null" >
        enable,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="payid != null" >
        #{payid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="receiveNum != null" >
        #{receiveNum,jdbcType=VARCHAR},
      </if>
      <if test="receiveAddress != null" >
        #{receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="getAddress != null" >
        #{getAddress,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="hurry != null" >
        #{hurry,jdbcType=BIT},
      </if>
      <if test="descration != null" >
        #{descration,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=BIT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.demo.pojo.TbOrderExample" resultType="java.lang.Integer" >
    select count(*) from tb_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.payid != null" >
        payid = #{record.payid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.openid != null" >
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveNum != null" >
        receive_num = #{record.receiveNum,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveAddress != null" >
        receive_address = #{record.receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.getAddress != null" >
        get_address = #{record.getAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null" >
        size = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.hurry != null" >
        hurry = #{record.hurry,jdbcType=BIT},
      </if>
      <if test="record.descration != null" >
        descration = #{record.descration,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enable != null" >
        enable = #{record.enable,jdbcType=BIT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_order
    set id = #{record.id,jdbcType=INTEGER},
      payid = #{record.payid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      openid = #{record.openid,jdbcType=VARCHAR},
      receive_num = #{record.receiveNum,jdbcType=VARCHAR},
      receive_address = #{record.receiveAddress,jdbcType=VARCHAR},
      get_address = #{record.getAddress,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=VARCHAR},
      hurry = #{record.hurry,jdbcType=BIT},
      descration = #{record.descration,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      enable = #{record.enable,jdbcType=BIT},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.pojo.TbOrder" >
    update tb_order
    <set >
      <if test="payid != null" >
        payid = #{payid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="receiveNum != null" >
        receive_num = #{receiveNum,jdbcType=VARCHAR},
      </if>
      <if test="receiveAddress != null" >
        receive_address = #{receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="getAddress != null" >
        get_address = #{getAddress,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="hurry != null" >
        hurry = #{hurry,jdbcType=BIT},
      </if>
      <if test="descration != null" >
        descration = #{descration,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=BIT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.pojo.TbOrder" >
    update tb_order
    set payid = #{payid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      receive_num = #{receiveNum,jdbcType=VARCHAR},
      receive_address = #{receiveAddress,jdbcType=VARCHAR},
      get_address = #{getAddress,jdbcType=VARCHAR},
      size = #{size,jdbcType=VARCHAR},
      hurry = #{hurry,jdbcType=BIT},
      descration = #{descration,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      enable = #{enable,jdbcType=BIT},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>