<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.mapper.TbReceiveOrderMapper" >
  <resultMap id="BaseResultMap" type="com.demo.pojo.TbReceiveOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="SMALLINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, openid, order_id, status, create_time, update_time
  </sql>
  
  <select id="selectSelfHistoryReceiveOrderByOpenid" parameterType="String" resultType="com.demo.pojo.SelfReceiveOrder">
  	SELECT
		tb_receive_order.id,
		tb_receive_order.create_time AS receiveOrderTime,
		tb_receive_order.order_id AS orderId,
		tb_user.`name` AS username,
		tb_user.phone_num AS phoneNum,
		tb_user.student_card AS studentCard,
		tb_order.`name` AS  name,
		tb_order.receive_num AS receiveNum,
		tb_order.receive_address AS receiveAddress,
		tb_order.get_address AS getAddress,
		tb_order.size,
		tb_order.descration,
		tb_order.hurry,
		tb_order.create_time AS updateTime,
		tb_order.enable as fetchg,
		tb_order.openid
FROM
		tb_receive_order
		INNER JOIN tb_order ON tb_receive_order.order_id = tb_order.id
		INNER JOIN tb_user ON tb_order.openid = tb_user.id
WHERE
		tb_receive_order.openid = #{openid} AND
		tb_receive_order.`status` = 2
ORDER BY
		receiveOrderTime DESC
  </select>
  
  <select id="selectSelfReceiveOrderByOpenid" parameterType="String" resultType="com.demo.pojo.SelfReceiveOrder">
  	SELECT
		tb_receive_order.id,
		tb_receive_order.create_time AS receiveOrderTime,
		tb_receive_order.order_id AS orderId,
		tb_user.`name` AS username,
		tb_user.phone_num AS phoneNum,
		tb_user.student_card AS studentCard,
		tb_order.`name` AS name,
		tb_order.receive_num AS receiveNum,
		tb_order.receive_address AS receiveAddress,
		tb_order.get_address AS getAddress,
		tb_order.size,
		tb_order.descration,
		tb_order.hurry,
		tb_order.create_time AS updateTime,
		tb_order.enable as fetchg,
		tb_order.openid
FROM
		tb_receive_order
		INNER JOIN tb_order ON tb_receive_order.order_id = tb_order.id
		INNER JOIN tb_user ON tb_order.openid = tb_user.id
WHERE
		tb_receive_order.openid = #{openid} AND
		tb_receive_order.`status` = 1
ORDER BY
		receiveOrderTime DESC
  </select>
  
  <select id="selectSelfEnReceiveOrderByOpenid"  parameterType="String" resultType="com.demo.pojo.SelfReceiveOrder">
  	SELECT
		tb_receive_order.id,
		tb_receive_order.create_time AS receiveOrderTime,
		tb_receive_order.order_id AS orderId,
		tb_user.`name` AS username,
		tb_user.phone_num AS phoneNum,
		tb_user.student_card AS studentCard,
		tb_order.`name` AS name,
		tb_order.receive_num AS receiveNum,
		tb_order.receive_address AS receiveAddress,
		tb_order.get_address AS getAddress,
		tb_order.size,
		tb_order.descration,
		tb_order.hurry,
		tb_order.create_time AS updateTime,
		tb_order.enable as fetchg,
		tb_order.openid
FROM
		tb_receive_order
		INNER JOIN tb_order ON tb_receive_order.order_id = tb_order.id
		INNER JOIN tb_user ON tb_order.openid = tb_user.id
WHERE
		tb_receive_order.openid = #{openid} AND
		tb_receive_order.`status` = 1 AND tb_order.enable=true
ORDER BY
	  tb_receive_order.id DESC
  </select>
  
  <select id="selectSelfDisReceiveOrderByOpenid" parameterType="String" resultType="com.demo.pojo.SelfReceiveOrder">
  	SELECT
		tb_receive_order.id,
		tb_receive_order.create_time AS receiveOrderTime,
		tb_receive_order.order_id AS orderId,
		tb_user.`name` AS username,
		tb_user.phone_num AS phoneNum,
		tb_user.student_card AS studentCard,
		tb_order.`name` AS name,
		tb_order.receive_num AS receiveNum,
		tb_order.receive_address AS receiveAddress,
		tb_order.get_address AS getAddress,
		tb_order.size,
		tb_order.descration,
		tb_order.hurry,
		tb_order.create_time AS updateTime,
		tb_order.enable as fetchg,
		tb_order.openid
FROM
		tb_receive_order
		INNER JOIN tb_order ON tb_receive_order.order_id = tb_order.id
		INNER JOIN tb_user ON tb_order.openid = tb_user.id
WHERE
		tb_receive_order.openid = #{openid} AND
		tb_receive_order.`status` = 1 AND tb_order.enable=false
ORDER BY
		concat(tb_receive_order.id,tb_order.get_address) DESC
  </select>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.demo.pojo.TbReceiveOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_receive_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_receive_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectNoPayOrder" resultMap="BaseResultMap">
  		select * from tb_receive_order where status =1
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_receive_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.demo.pojo.TbReceiveOrderExample" >
    delete from tb_receive_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.pojo.TbReceiveOrder" >
    insert into tb_receive_order ( openid, order_id, 
      status, create_time, update_time
      )
    values ( #{openid,jdbcType=VARCHAR}, #{orderId,jdbcType=INTEGER}, 
      #{status,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.demo.pojo.TbReceiveOrder" >
    insert into tb_receive_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample"  parameterType="com.demo.pojo.TbReceiveOrderExample" resultType="java.lang.Integer" >
    select count(*) from tb_receive_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_receive_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.openid != null" >
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_receive_order
    set id = #{record.id,jdbcType=INTEGER},
      openid = #{record.openid,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=SMALLINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.pojo.TbReceiveOrder" >
    update tb_receive_order
    <set >
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.pojo.TbReceiveOrder" >
    update tb_receive_order
    set openid = #{openid,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=INTEGER},
      status = #{status,jdbcType=SMALLINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>